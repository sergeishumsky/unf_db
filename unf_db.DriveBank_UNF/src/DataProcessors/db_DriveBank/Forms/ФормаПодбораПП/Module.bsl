////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВалютаРегламентированногоУчета = Константы.ВалютаУчета.Получить();
	
	Если Параметры.Свойство("Отбор") Тогда
		
		Параметры.Отбор.Свойство("Организация",		ОтборОрганизация);
		Параметры.Отбор.Свойство("БанковскийСчет",	ОтборБанковскийСчет);
		Параметры.Отбор.Свойство("ДатаНачала",		ОтборДата);
		Параметры.Отбор.Свойство("ДатаОкончания",	ОтборДатаОкончания);
		
	КонецЕсли;
		
	//Если НЕ ЗначениеЗаполнено(ОтборБанковскийСчет) Тогда
	//	УчетДенежныхСредствБП.УстановитьБанковскийСчет(
	//		ОтборБанковскийСчет, 
	//		ОтборОрганизация, 
	//		ВалютаРегламентированногоУчета);
	//КонецЕсли; 
	
	ОбновитьСписокПодбора();
	
КонецПроцедуры




////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОЙ ЧАСТИ СписокПлатежныхПоручений

&НаКлиенте
Процедура СписокПлатежныхПорученийПриИзменении(Элемент)
	
	Если Элементы.СписокПлатежныхПоручений.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИДТекущейСтроки = Элементы.СписокПлатежныхПоручений.ТекущаяСтрока;
	ТекущаяОтметка = Элементы.СписокПлатежныхПоручений.ТекущиеДанные.Отметка;
	
	Для каждого ИДСтроки Из Элементы.СписокПлатежныхПоручений.ВыделенныеСтроки Цикл
		Если ИДСтроки <> ИДТекущейСтроки Тогда
			ВыделеннаяСтрока = СписокПлатежныхПоручений.НайтиПоИдентификатору(ИДСтроки);
			ВыделеннаяСтрока.Отметка = ТекущаяОтметка;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПлатежныхПорученийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтрокаДокумента = СписокПлатежныхПоручений.НайтиПоИдентификатору(ВыбраннаяСтрока);
	Если СтрокаДокумента <> Неопределено Тогда
		ОткрытьФорму("Документ.ПлатежноеПоручение.ФормаОбъекта", Новый Структура("Ключ", СтрокаДокумента.Ссылка), ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПлатежныхПорученийПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Элемент.ТекущийЭлемент.Имя <> "СписокПлатежныхПорученийОтметка";
	Если Отказ Тогда
		СтрокаДокумента = Элементы.СписокПлатежныхПоручений.ТекущиеДанные;
		Если СтрокаДокумента <> Неопределено Тогда
			ОткрытьФорму("Документ.ПлатежноеПоручение.ФормаОбъекта", Новый Структура("Ключ", СтрокаДокумента.Ссылка), ЭтаФорма);
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры




////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОбновитьСписок(Команда)
	
	ОбновитьСписокПодбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкиИнвертировать(Команда)
	
	УстановитьОтметки(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкиСнять(Команда)
	
	УстановитьОтметки(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкиУстановить(Команда)
	
	УстановитьОтметки(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьСтрокиВыписки(Команда)
	
	ОтмеченныеДокументы = СписокПлатежныхПоручений.НайтиСтроки(Новый Структура("Отметка", Истина));
	Если ОтмеченныеДокументы.Количество() = 0 Тогда
		ТекстПредупреждения = НСтр("ru = 'Нет отмеченных документов'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	Данные=Новый Структура;
	
	Для Каждого Стр Из СписокПлатежныхПоручений Цикл
		
		Если НЕ Стр.Отметка Тогда
			Продолжить;
		КонецЕсли;
		
		Данные.Вставить("Номер",Стр.Номер);
		Данные.Вставить("Дата",Стр.Дата);
		
		ТипДок = "";
		Если Найти(ВРег(Стр.ЮрФизЛицо),"ЮРИД") >0 Тогда
			ТипДок = "Платеж юрлицу";
		КонецЕсли;	
		Если Найти(ВРег(Стр.ЮрФизЛицо),"ФИЗИ") >0 Тогда
			ТипДок = "Платеж физлицу";
		КонецЕсли;	
		Данные.Вставить("ЮрФизЛицо",ТипДок);
		Данные.Вставить("СрокПлатежа",Стр.СрокПлатежа);
		Данные.Вставить("СчетОрганизации",Стр.СчетОрганизации);
		Данные.Вставить("НаименованиеПолучателя",Стр.НаименованиеПолучателя);
		Данные.Вставить("ИННПолучателя",Стр.ИННПолучателя);
		Данные.Вставить("СчетКонтрагентаНомер",Стр.СчетКонтрагентаНомер);
		Данные.Вставить("КодБанкаПолучателя",Стр.КодБанкаПолучателя);
		Данные.Вставить("СуммаДокумента",Стр.СуммаДокумента);
		Данные.Вставить("НазначениеПлатежа",Стр.НазначениеПлатежа);
		Данные.Вставить("ОчередностьПлатежа",Стр.ОчередностьПлатежа);
		Данные.Вставить("ИННТретьегоЛица",Стр.ИННТретьегоЛица);
		Данные.Вставить("КодПлатежа",Стр.КодПлатежа);
		
		
		Оповестить("Платежи_ДиректБанк",Данные);
		Данные.Очистить();		
	КонецЦикла;
	
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ОбновитьСписокПодбора() 
	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", ОтборОрганизация);
	Запрос.УстановитьПараметр("СчетОрганизации", ОтборБанковскийСчет);
	
	Если ЗначениеЗаполнено(ОтборДата) Тогда
		
		ДатаНачало = НачалоДня(ОтборДата);
		ДатаКонец  = КонецДня(ОтборДатаОкончания);
		
		Запрос.УстановитьПараметр("ДатаНачало", ДатаНачало);
		Запрос.УстановитьПараметр("ДатаКонец", ДатаКонец);
		
	КонецЕсли; 
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЛОЖЬ КАК Отметка,
	|	ПлатежноеПоручение.Ссылка КАК Ссылка,
	|	ПлатежноеПоручение.ПометкаУдаления КАК ПометкаУдаления,
	|	ПлатежноеПоручение.Номер КАК Номер,
	|	ПлатежноеПоручение.Дата КАК Дата,
	|	ПлатежноеПоручение.Проведен КАК Проведен,
	|	ПлатежноеПоручение.Организация КАК Организация,
	|	ПлатежноеПоручение.БанковскийСчет КАК СчетОрганизации,
	|	ПлатежноеПоручение.Контрагент КАК Контрагент,
	|	ПлатежноеПоручение.СуммаДокумента КАК СуммаДокумента,
	|	ПлатежноеПоручение.ДокументОснование КАК ДокументОснование,
	|	ВЫБОР
	|		КОГДА ПлатежноеПоручение.Проведен
	|			ТОГДА 1
	|		КОГДА ПлатежноеПоручение.ПометкаУдаления
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НомерКартинки,
	|	ПлатежноеПоручение.Оплачено КАК Оплачено,
	|	ПлатежноеПоручение.ИННПолучателя КАК ИННПолучателя,
	//|	ПлатежноеПоручение.ИННТретьегоЛица КАК ИННТретьегоЛица,
	|	ПлатежноеПоручение.НазначениеПлатежа КАК НазначениеПлатежа,
	|	ПлатежноеПоручение.ОчередностьПлатежа КАК ОчередностьПлатежа,
	|	ПлатежноеПоручение.КодПлатежа КАК КодПлатежа,
	|	ПлатежноеПоручение.Дата КАК СрокПлатежа,
	|	ПлатежноеПоручение.БанковскийСчет.НомерСчета КАК СчетОрганизацииНомер,
	|	ПлатежноеПоручение.СчетКонтрагента.НомерСчета КАК СчетКонтрагентаНомер,
	|	ПлатежноеПоручение.СчетКонтрагента.Банк.Код КАК КодБанкаПолучателя,
	|	ПлатежноеПоручение.Контрагент.НаименованиеПолное КАК НаименованиеПолучателя,
	|	ПлатежноеПоручение.ВидПлатежа КАК ВидПлатежа,
	|	ПлатежноеПоручение.Контрагент.ВидКонтрагента КАК ЮрФизЛицо
	|ИЗ
	|	Документ.ПлатежноеПоручение КАК ПлатежноеПоручение
	|ГДЕ
	|	ПлатежноеПоручение.Оплачено = ЛОЖЬ
	|	" + ?(ЗначениеЗаполнено(ОтборДата), "И ПлатежноеПоручение.Дата МЕЖДУ &ДатаНачало И &ДатаКонец", "") + "
	|	" + ?(ЗначениеЗаполнено(ОтборОрганизация) , "И ПлатежноеПоручение.Организация = &Организация", "") + " 
	|	" + ?(ЗначениеЗаполнено(ОтборБанковскийСчет) , "И ПлатежноеПоручение.БанковскийСчет = &СчетОрганизации", "") + " 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Ссылка";
	
	
	СписокПлатежныхПоручений.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Если СписокПлатежныхПоручений.Количество() = 0 Тогда
		Если ЗначениеЗаполнено(ОтборБанковскийСчет) Тогда
			ТекстПодсказки = НСтр("ru = 'С %1 по %2 нет неоплаченных документов по организации %3 и счету в банке ""%4""'");
		Иначе
			ТекстПодсказки = НСтр("ru = 'С %1 по %2 нет неоплаченных документов по организации %3'");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ОтборДата) Тогда		
			ТекстПодсказки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПодсказки, 
			Формат(ДатаНачало, "ДФ=dd.MM.yyyy"),
			Формат(ДатаКонец,  "ДФ=dd.MM.yyyy"),
			ОтборОрганизация,
			ОтборБанковскийСчет);
		КонецЕсли;	
		
		Элементы.СписокПлатежныхПорученийОтметкиУстановить.Доступность    = Ложь;
		Элементы.СписокПлатежныхПорученийОтметкиСнять.Доступность         = Ложь;
		Элементы.СписокПлатежныхПорученийОтметкиИнвертировать.Доступность = Ложь;		
	Иначе
		ТекстПодсказки = НСтр("ru='Отметьте флажками документы, которые нужно отправить в банк'");
		
		Элементы.СписокПлатежныхПорученийОтметкиУстановить.Доступность    = Истина;
		Элементы.СписокПлатежныхПорученийОтметкиСнять.Доступность         = Истина;
		Элементы.СписокПлатежныхПорученийОтметкиИнвертировать.Доступность = Истина;		
	КонецЕсли;
	
	Элементы.НадписьСпискаПоручений.Заголовок = ТекстПодсказки;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтметки(ТипОтметки)

	Для Каждого СтрокаСписка Из СписокПлатежныхПоручений Цикл
		Если ТипОтметки = Неопределено Тогда
			СтрокаСписка.Отметка = НЕ СтрокаСписка.Отметка;
		Иначе
			СтрокаСписка.Отметка = ТипОтметки;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

